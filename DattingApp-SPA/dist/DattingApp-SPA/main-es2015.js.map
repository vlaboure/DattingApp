{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.ts","./src/app/_models/pagination.ts","./src/app/_resolver/list-resolver.ts","./src/app/_resolver/member-detail-resolver.ts","./src/app/_resolver/member-edit-resolver.ts","./src/app/_resolver/member-list-resolver.ts","./src/app/_resolver/messages-resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/error.Interceptor.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/message.component.ts","./src/app/messages/message.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/reset/reset.component.ts","./src/app/reset/reset.component.html","./src/app/routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n// composant permettant de contrôler et restreindre les accés aux routes\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  // dans le constructeur on crée des instances des classes à utiliser pour contrôler l'user\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ){\n\n  }\n          // ********** appel de base avec ng g ruard auth */\n  // canActivate(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n          // on n'a besoin que de savoir si l'user est connecté donc un boolean\n  canActivate(): boolean{\n    // loggé ? ok\n    if (this.authService.loggedIn()){\n      return true;\n    }\n    // non loggé message erreur\n    this.alertify.error('dégage de là gros pédé');\n    // redirection vers accueil\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { MemberDetailComponent } from '../members/member-detail/member-detail.component';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent>{\r\n    canDeactivate(component: MemberEditComponent){\r\n        if (component.editForm.dirty){\r\n            return confirm('Etes vous sur de vouloir quitter ? tous les changements seront perdus');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\nexport class PaginatedResult<T>{\r\n    result: T;\r\n    pagination: Pagination;\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListResolver implements Resolve<User[]>{\r\n   pageNumber = 1;\r\n   pageSize = 5;\r\n   likesParam = 'Likers';\r\n   constructor(private userService: UserService, private router: Router,\r\n               private alertify: AlertifyService){}\r\n   resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n      return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam)\r\n      .pipe(\r\n         catchError(error => {\r\n            this.alertify.error('Erreur lors de la récupération des datas');\r\n            this.router.navigate(['/home']);\r\n            return of(null); // return of--> return observable of(null)\r\n         })\r\n      );\r\n   }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n// resolver pour passer les datas avant l'affichage des données\r\n// injecté par le compilateur au lancement\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User>{\r\n   constructor(private userService: UserService, private router: Router,\r\n               private alertify: AlertifyService){}\r\n   resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n      return this.userService.getUser(route.params[`id`]).pipe(\r\n         // catchError-> methode de rxjs\r\n         catchError(error => {\r\n            this.alertify.error('Erreur lors de la récupération des datas');\r\n            this.router.navigate(['/members']);\r\n            // of -> observable de rxjs\r\n            return of(null); // return of--> return observable of(null)\r\n         })\r\n      );\r\n   }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User>{\r\n   constructor(private userService: UserService, private router: Router, private authService: AuthService,\r\n               private alertify: AlertifyService){}\r\n               \r\n   resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n      /** le\r\n       * new Claim(ClaimTypes.NameIdentifier, userFromRepo.Id.ToString()),\r\n       * de login est enregistré comme nameid dans la requete de token\r\n       */\r\n      return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n         catchError(error => {\r\n            this.alertify.error('Erreur lors de la récupération vos datas');\r\n            this.router.navigate(['/members']);\r\n            return of(null); // return of--> return observable of(null)\r\n         })\r\n      );\r\n   }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]>{\r\n   pageNumber = 1;\r\n   pageSize = 5;\r\n   constructor(private userService: UserService, private router: Router,\r\n               private alertify: AlertifyService){}\r\n   resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n      return this.userService.getUsers(this.pageNumber, this.pageSize)\r\n      .pipe(\r\n         catchError(error => {\r\n            this.alertify.error('Erreur lors de la récupération des datas');\r\n            this.router.navigate(['/home']);\r\n            return of(null); // return of--> return observable of(null)\r\n         })\r\n      );\r\n   }\r\n}","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Message } from '../_models/message';\r\nimport { debug } from 'console';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]>{\r\n   pageNumber = 1;\r\n   pageSize = 5;\r\n   contener = 'Unread';\r\n\r\n   constructor(private userService: UserService, private router: Router,\r\n               private alertify: AlertifyService, private authService: AuthService){}\r\n\r\n   resolve(route: ActivatedRouteSnapshot): Observable<Message[]>{\r\n      console.log('resolver !!!')\r\n      return this.userService\r\n         .getMessages(\r\n            this.authService.decodedToken.nameid, \r\n            this.pageNumber,\r\n            this.pageSize,\r\n            this.contener)\r\n      .pipe(\r\n         catchError(error => {\r\n            this.alertify.error('Erreur lors de la récupération des messages');\r\n            this.router.navigate(['/home']);\r\n            return of(null); // return of--> return observable of(null)\r\n         })\r\n      );\r\n   }\r\n  // debugger;\r\n}","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n  confirm(message: string, okCallBack: () => any){\n    alertify.confirm(message, (e: any) => {\n      if (e){\n        okCallBack();\n      }\n        else{}\n    });\n  }\n    // les boites de dialogue type Alertify\n  success(message: string){\n    alertify.success(message);\n  }\n  error(message: string){\n    alertify.error(message);\n  }\n  warning(message: string){\n    alertify.warning(message);\n  }\n  message(message: string){\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/Http';\nimport {BehaviorSubject, Subject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/User';\nimport { templateJitUrl } from '@angular/compiler';\n\n\n/**************************************************************************************************/\n              /****service injecté pour le login */\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthService {\n  baseUrl  = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  private _login;\n  logOk = new Subject<boolean>();\n    // photo par defaut peut être changée et est initalisée au démarrage\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n// tslint:disable-next-line: typedef-whitespace\nconstructor(private Http : HttpClient) { }\n\nchangeMemberPhoto(photoUrl: string){\n  // next propriété des promises change la photo de l'objet par la photo en argument\n  this.photoUrl.next(photoUrl);\n}\n// tslint:disable-next-line: whitespace\n// tslint:disable-next-line: typedef-whitespace\n\n// ************************************************************** */\n// le login avec le this.model passé en paramètre\n  login(model: any){\n                        // pipe empile chk fonction avec le resultat de la fonction précédente\n    return this.Http.post(this.baseUrl + 'login', model).pipe(\n                        // on passe user venant du serveur en paramètre\n      map((response: any) => {\n        const user = response;\n        if (user){\n                  // le token est enregistré en local pour les connexions futures\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          // user ---> token dans le http envoyé par le serveur\n          this.currentUser = user.user;\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    // tslint:disable-next-line: semicolon\n    )\n  }\n\n  register(user: User){\n    // requête post à l'api\n    return this.Http.post(this.baseUrl + 'register', user);\n  }\n\n  //\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  \n  setLogin(model: any){\n    this._login = model.userName;\n    // tslint:disable-next-line: no-debugger\n   // debugger;\n    console.log(model.userName);\n\n  }\n  getLogin(){\n    let tp = this._login;\n   // this.clearLogin();\n    return tp;\n  }\n  clearLogin(){\n    this._login = undefined;\n  }\n  reset(user: User){\n    // tslint:disable-next-line: no-debugger\n    //debugger;\n    return this.Http.put(this.baseUrl + 'resetUser', user);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/Http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor{\r\n    // implementation de l'interface pour Httpinterceptor\r\n    intercept(req: import('@angular/common/Http').HttpRequest<any>, next: import('@angular/common/Http')\r\n    .HttpHandler): import('rxjs')\r\n    .Observable<import('@angular/common/Http').HttpEvent<any>> {\r\n        // throw new Error('Method not implemented.');\r\n        return next.handle(req).pipe(\r\n            catchError(error =>{\r\n                if (error instanceof HttpErrorResponse){\r\n                    if (error.status === 401){\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError){\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateError = '';\r\n                       // errors est uen propriété de l'objet error retourné par le serveur api\r\n                    if(serverError.errors && typeof serverError.errors ==='object'){\r\n                        for(const key in serverError.errors){\r\n                            if(serverError.errors[key] ){\r\n                                modalStateError += serverError.errors[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }  \r\n                    return throwError(modalStateError || serverError || 'Autre chose problème...')\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide : HTTP_INTERCEPTORS,\r\n    useClass : ErrorInterceptor,\r\n    multi : true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/Http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/User';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { JsonPipe } from '@angular/common';\nimport { Message } from '../_models/message';\n\n/**\n * création d'un header pour autorisations pour les requêtes get\n */\n    /* plus nécessaire car  JwtModule.forRoot dans app.module*/\n// const httpOptions = {\n//   headers: new HttpHeaders({\n//     // tslint:disable-next-line: object-literal-key-quotes\n//     'Authorization' : 'Bearer ' + localStorage.getItem('token')\n//   })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\nconstructor(private http: HttpClient) { }\n\n// retourne un objet contenant le result--> contenu passé dans la requete\n                            // l'interface pagination-->\n                            /*currentPage: number;\n                              itemsPerPage: number;\n                              totalItems: number;\n                              totalPages: number; */\n\n  getUsers(page?, itemsPerPage?, userParams?,likesParam?): Observable<PaginatedResult<User[]>>{\n    // il faut typer le retrun <User[]>car get retourne un object et pas un user\n    // si pas de  JwtModule.forRoot dans app.module--> get doit contenir option pour token\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n    let params = new HttpParams();\n    if(page!= null && itemsPerPage!= null){\n      // pageNumber de params.cs\n      params = params.append('pageNumber',page);\n      // pageSize de params.cs\n      params = params.append('pageSize',itemsPerPage);\n    }\n\n    if(userParams != null){\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n    }\n\n    if(likesParam === 'Likers'){\n      params = params.append('Likers', 'true');\n    }  \n    if(likesParam === 'Likees'){\n      params = params.append('Likees', 'true');\n    }  \n    // environment.apiUrl--> 'http://localhost:5000/api/'\n    return this.http\n    .get<User[]>(environment.apiUrl + 'users', {observe: 'response',params})\n    .pipe(\n      // map en retour :\n      // on récupère le header --> paginatedResult.result = response.body\n      //                       --> paginatedResult.pagination = JSON....      \n      map(response=>{\n        paginatedResult.result = response.body;\n        if (response.headers.get('Pagination') != null){\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n    );\n  }\n\n  /**\n   * Méthode pour récupérer les messages avec pagination\n   */\n  getMessages(id: number, page?, itemsPerPage?, contener?){\n    // comme pour getUsers on récupère les info de pagination et le message\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('Contener', contener);\n\n    if (page != null && itemsPerPage != null){\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n    return this.http\n      .get<Message[]>(environment.apiUrl + 'users/' + id + '/messages',{\n        observe: 'response',params})\n      .pipe( \n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null){\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessagesThread(id: number, receptId: number){\n    return this.http\n      .get<Message[]>(environment.apiUrl + 'users/' + id + '/messages/thread/' + receptId);\n  }\n\n  getUser(id: number): Observable<User>{\n    // il faut typer le retrun <User[]>car get retourne un object et pas un user\n        // si pas de  JwtModule.forRoot dans app.module--> get doit contenir option pour token\n    return this.http.get<User>(environment.apiUrl + 'users/' + id);\n  }\n  \n  updateUser(id: number,user: User){\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number){\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, receptId : number){\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + receptId, {});\n  }\n\n  sendMessage(id: number, message: Message){\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id,{});\n  }\n  markMessageRead(userId: number, id: number){\n    // on souscrit au service directement dans service car il n'y a rien à renvoyer\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id + '/read',{}).subscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from './_services/auth.service';\nimport { User } from './_models/User';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  jwtHelper = new JwtHelperService();\n\n  constructor(public authService: AuthService){}\n\n  ngOnInit(){\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token){\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user){\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","\n<app-nav></app-nav>\n        <!-- appel du router appRoute -->\n<router-outlet></router-outlet>   \n\n<!-- Toolbar -->\n","import { BrowserModule, HammerGestureConfig, enableDebugTools, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { HttpClientModule } from '@angular/common/Http';\nimport { JwtModule } from '@auth0/angular-jwt'; // a mettre en tête\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.Interceptor';\nimport { BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/message.component';\nimport {AuthGuard} from './_guards/auth.guard';\nimport { appRoutes } from './routes';\nimport {UserService} from './_services/user.service';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MemberDetailResolver } from './_resolver/member-detail-resolver';\nimport { MemberListResolver } from './_resolver/member-list-resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolver/member-edit-resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListResolver } from './_resolver/list-resolver';\nimport { MessagesResolver } from './_resolver/messages-resolver';\n//import { TimeAgoObsPipe } from './_services/TimeAgoObsPipe';\nimport { ResetComponent } from './reset/reset.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\n\nexport function tokenGetter(){\n   return localStorage.getItem('token');\n}\n\nexport class CustomHammerConfig extends HammerGestureConfig{\n   overrides = {\n      pinch: {enable: false},\n      rotate: {enable: false}\n   };\n}\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      MemberMessagesComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      //TimeAgoObsPipe,\n      ResetComponent\n   ],\n\n   imports: [\n      /******utilier.froRootpermetdecréerunsingleton\\n*****pourn'appliquerleservicesurlarouteencours\\n*/\n      TimeagoModule.forRoot(),\n      HttpClientModule,\n      NgxGalleryModule,\n      FormsModule,\n      BrowserAnimationsModule,\n      BsDatepickerModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot(),\n      ReactiveFormsModule,\n      RouterModule.forRoot(appRoutes),\n      TimeagoModule.forRoot(),\n      FileUploadModule,\n      JwtModule.forRoot({\n         config: {\n           tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n       })\n   ],\n   \n   bootstrap: [AppComponent],\n\n   providers: [\n      ErrorInterceptorProvider,\n      AuthService,\n      AlertifyService,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      MessagesResolver,\n      ListResolver,\n      PreventUnsavedChanges,\n      {provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig}\n   ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/Http';\nimport { EventEmitter } from 'protractor';\nimport { AuthService } from '../_services/auth.service';\nimport { NavComponent } from '../nav/nav.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  // pour envoi à nav val de regiser\n  registerMode = false;\n  reset = false;\n  login:string;\n  logOk:boolean;\n\n\n // values: any;\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  ngOnInit() {\n  //  this.getValues();\n    this.login = this.authService.getLogin();\n  //  this.authService.logOk.subscribe((logg) => this.logOk);\n    // tslint:disable-next-line: no-debugger\n    debugger;\n    //NavComponent.updateUserStatus.next(true); // here!\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n  resetPassword(){\n    this.reset = true;\n    console.log(this.reset);\n  }\n  // getValues(){\n  //   // subscribe car on travaille sur des promesses\n  //   this.http.get('http://localhost:5000/api/values').subscribe(response =>{\n  //     this.values = response;\n  //   }, error => {console.log(error); });\n  // }\n\n\n    cancelRegisterMode(registerMode: boolean){\n      this.registerMode = registerMode;\n    }\n    cancelResetMode(resetMode: boolean){\n      this.reset = resetMode;\n    }\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Trouvez l'amour</h1>\n    <p class=\"lead\">Trouvez votre âme soeur... Il suffit de s'inscrire!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\"(click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n          <!-- registerMode récupéré par le emit de register.compnenet.ts si registerMode==true on affiche register mode  -->\n  <div *ngIf=\"registerMode && !reset\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n          <!-- si click sur register appel de register.component -->\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            <!-- version avec option / relation parent enfant ramenant à api.values -->\n        <!-- <app-register [valuesFromHome] = \"values\" (cancelRegister)=\"cancelRegisterMode($event)\"></app-register> -->\n      </div>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\" *ngif=\"login\"> \n    <!-- *ngIf=\"login\" -->\n    <button target=\"_blank\" class=\"text-link link-help lienMotDePasseOublie\"(click)=\"resetPassword()\"\n      >mot de passe oublié</button>\n  </div>   \n    <div *ngIf=\"reset\" class=\"row justify-content-center lienMotDePasseOublie\">\n        <app-reset (cancelReset)=\"cancelResetMode($event)\"></app-reset>\n  </div>\n</div>\n<!-- <p *ngFor=\"let value of values\">{{value.name}}</p> -->","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/User';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n  constructor(private userService: UserService, private alertifyService: AlertifyService\n    ,private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // ['users'] correspond à la propriété user: dans route.ts\n      //  {path : 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers(){\n      this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe(\n        (res: PaginatedResult<User[]>) =>{\n          // res.result = body http\n          this.users = res.result;\n          this.pagination = res.pagination;\n          }, error =>{\n            this.alertifyService.error(error);\n          }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Qui me like ? ' : 'Membres que je Like'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" ngDefaultControl btnRadio=\"Likers\" (click)=\"loadUsers()\" >Qui me like</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" ngDefaultControl btnRadio=\"Likees\" (click)=\"loadUsers()\" >Que je Like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n    <app-member-card [user]=\"user\"></app-member-card>\n  </div>\n</div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/User';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  constructor(private userService : UserService, private autService : AuthService,\n              private alertifyService : AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number){\n    this.userService.sendLike(this.autService.decodedToken.nameid,id).subscribe(\n      data => {this.alertifyService.success(\"user liké : \" + this.user.knownAs);},\n      error =>{this.alertifyService.error(\"error au like \"+ error)});\n  }\n}\n\n","<div class=\"card mb-3\">\n  <div class=\"card-img-warper\">\n      <img  class=\"card-img-top\" \n      src=\"{{ user.photoUrl||'../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">  \n      <ul class=\"list-inline member-icons animate text-center\">\n        <li class=\"list-inline-item\">\n          <button class=\"btn btn-primary\" [routerLink]=\"['/members/',user.id]\" \n          routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button>\n        </li>\n        <li class=\"list-inline-item\">\n          <button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button>\n        </li>\n        <li class=\"list-inline-item\">\n          <button class=\"btn btn-primary\"><i class=\"fa fa-envelope\"[routerLink]=\n            \"['/members/',user.id]\" [queryParams]=\"{tab: 3}\"></i></button>\n        </li>\n      </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>{{user.knownAs}}</h6>\n  </div>\n  <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/User';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  constructor(private userService: UserService, private alertify: AlertifyService\n            , private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // this.loadUser();--> inutile car resolver\n        // refére à route path: member/:id ... , resolver ...\n    this.route.data.subscribe(data => {\n      this.user = data[`user`];\n    });\n    this.route.queryParams.subscribe(params =>{\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n          width: '500px',\n          height: '500px',\n          imagePercent: 100,\n          thumbnailsColumns: 4,\n          imageAnimation: NgxGalleryAnimation.Slide,\n          preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(){\n    const imageUrls = [];\n    for (const photo of  this.user.photos){\n      imageUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  // selectTab(tabId: number) {\n  //   this.memberTabs.tabs[tabId].active = true;\n  // }\n\n//*************loadUser -> plus nécessaire avec le resolver */\n\n  // loadUser(){                       // route.snapshot.params[`id`]--> récupère le paramètre de l'@\n  //   this.userService.getUser(+this.route.snapshot.params[`id`]).subscribe((user: User) =>{\n  //     this.user = user;\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n     <h1>profile de {{user.knownAs}}</h1>\n  </div>\n  <div class=\"row\">  \n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img src=\"{{user.photoUrl}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\n      \n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last active</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Create</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n\n        </div>\n        <div class=\"card-footer\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button class=\"btn btn-success\"(click)=\"selectTab(3)\">Message</button>\n        </div>\n      </div>  \n    </div>\n    <!-- ici on fait un container avec des onglets tabmodule -->\n      <div class=\"col-sm-8\">\n        <div class=\"tab-panel\">\n          <tabset class=\"member-tabset\" #memberTabs\n          >\n            <tab heading=\"A propos {{user.knownAs}}\">\n              <h4>Description ?</h4>\n              <p>{{user.introduction}}</p>\n              <h4>Vous cherchez ?</h4>\n              <p>{{user.lookingFor}}</p>\n            </tab>     \n            <tab heading=\"Centes d'intérêt\">\n              <h4>Intérêt</h4>\n              <p>{{user.interests}}</p>\n            </tab>    \n            <tab heading=\"Photos\">\n              <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n            </tab>    \n            <tab heading=\"Messages\">\n              <app-member-messages [receptId]=\"user.id\"></app-member-messages> \n            </tab>\n          </tabset>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n  \n})\nexport class MemberEditComponent implements OnInit {\n  // variable pour accéder au dom et modifier le editForm pour faire disparaître le message d'avertissement\n  // Vous avez fait des changements sans valider, vos modifications seront perdues\n  @ViewChild('editForm', {static: true}) editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  // le navigateur et non l'appli envoie un message si quitter après modif sans enregistrer\n  @HostListener('window:beforeunload',['$event'])\n  unloadNotification($event: any){\n    if (this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService, private userService: UserService,\n                                             private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data =>{\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl= photoUrl);\n  }\n  updateUser(){\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('mise à jour réussie');\n      this.editForm.reset(this.user);\n      this.editForm.reset(this.user);},error => {this.alertify.error(error); });\n  }\n\n  updateMainPhoto(photoUrl){\n    this.user.photoUrl = photoUrl;\n  }\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Votre profil</h1>\n    </div>\n    <div *ngIf=\"editForm.dirty\" class=\"col-sm-8\">\n      <div class=\"alert alert-info\">\n        <strong>Attention </strong>Vous avez fait des changements sans valider, vos modifications seront perdues\n      </div>\n  </div> \n  </div>\n  <div class=\"row\">  \n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top img-thumbnail\">\n      \n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user.city}}, {{user.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last active</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Create</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n\n        </div>\n        <div class=\"card-footer\">\n          <!-- button-block-> toute la largeur désactivé si pas de changement-->\n          <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">Sauver</button>\n        </div>\n      </div>  \n    </div>\n    <!-- ici on fait un container avec des onglets tabmodule -->\n      <div class=\"col-sm-8\">\n        <div class=\"tab-panel\">\n          <tabset class=\"member-tabset\">\n            <tab heading=\"Editer le profile\">\n              <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n                <h4>Description ?</h4>\n                <textarea name=\"introduction\" rows=\"6\" class=\"form-control\"\n                 [(ngModel)]=\"user.introduction\"></textarea>\n                <h4>Vous cherchez ?</h4>\n                <textarea name=\"lookingFor\" rows=\"6\" class=\"form-control\"\n                 [(ngModel)]=\"user.lookingFor\">\n                </textarea>\n                 <h4>Centres d'interêt?</h4>\n                <textarea name=\"interests\" rows=\"6\" class=\"form-control\"\n                  [(ngModel)]=\"user.interests\">\n                </textarea>\n                  <div class=\"form-inline mt-2\">\n                    <label for=\"city\"><strong> Ville</strong></label>\n                    <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\n                    <label for=\"city\"><strong>Pays</strong></label>\n                    <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\"> \n                    <label for=\"city\"><strong>Nom</strong></label>\n                    <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"user.userName\">                   \n                  </div>\n              </form>\n            </tab>     \n            <tab heading=\"Editer les photos\">\n                <!-- on lie output getMemberPhotoChange de l'enfant photo-editor\n                  à une méthode a ajouter dans le member-edit.component.ts  -->\n              <app-photo-editor [photos]=\"user.photos\"           \n              (getMemeberPhotoChange)=\"updateMainPhoto($event)\"></app-photo-editor>\n            </tab>    \n            </tabset>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/User';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { UserService } from '../../_services/user.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  // récpération du user logué\n  user: User = JSON.parse(localStorage.getItem('user'));\n  // tableau de deux valeurs \n  genderList = [{value : 'male', display : 'Males'},{value : 'female', display : 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertifyService: AlertifyService\n            , private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // this.loadUSers();\n    this.route.data.subscribe(data => {\n      // ['users'] correspond à la propriété user: dans route.ts\n      //  {path : 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.setFilters();\n  }\n  setFilters(){\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n  }\n\n  resetFilters(){\n    this.setFilters();\n    this.loadUsers();\n  }\n\n  pageChanged(event: any): void {\n    // page--> propriété de angular html\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n    // appel de l'observable getUsers\n\n  loadUsers(){\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe(\n        (res: PaginatedResult<User[]>) =>{\n          // res.result = body http\n          this.users = res.result;\n          this.pagination = res.pagination;\n          }, error =>{\n            this.alertifyService.error(error);\n          }\n      );\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit)= \"loadUsers()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\" \n      [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" \n      [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\" \n        [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let gender of genderList\" [value]= \"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)= \"resetFilters()\" style=\"margin-left:10px\">Reset Filter</button>\n  \n  </form>\n  <br>\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n<div class=\"d-flex justify-content-center\">\n  <pagination   \n          [boundaryLinks]=\"true\" \n          [totalItems]=\"pagination.totalItems\"  \n          [(ngModel)]=\"pagination.currentPage\"           \n          [itemsPerPage]=\"pagination.itemsPerPage\"\n          (pageChanged)=\"pageChanged($event)\"\n          previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() receptId: number;\n  messages: Message[];\n  newMessage: any ={};\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages(){\n    const currentUserId = + this.authService.decodedToken.nameid; \n    this.userService.getMessagesThread(this.authService.decodedToken.nameid, this.receptId)\n    .pipe(\n      tap(messages => {\n        for (let m of messages){\n   \n         if (m.isRead === false && m.receptId === currentUserId){\n            this.userService.markMessageRead(currentUserId, m.id);\n          }\n        }\n      })\n    )\n    .subscribe(messages => {\n      this.messages = messages;\n    }\n      ,error =>{\n        this.alertify.error(error);\n      });\n    console.log(this.receptId);\n  }\n  sendMessage(){\n    this.newMessage.receptId = this.receptId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n    .subscribe((message: Message) =>\n    {\n      // unshift: place au début du tableau\n      this.messages.unshift(message);\n      // effacer le message\n      this.newMessage = \"\";\n    }, error => {this.alertify.error(error); });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      <p>Pas de message pour le moment</p>\n    </div> \n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- à elle lui sender = user détail -->\n        <div *ngIf=\"message.senderId == receptId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">            \n              <strong class=\"primary-font float-left\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n              </small> \n            </div>\n            <p>{{message.content}}</p>\n\n          </div>\n        </div>\n        <!-- à moi sender different user détail-->\n        <div *ngIf=\"message.senderId != receptId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">             \n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\"> Envoyé {{message.messageSent | timeago}}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(Non lu)</span>               \n                <span *ngIf=\"message.isRead\" class=\"fa fa-clock-o\"> lu : {{message.dateRead | timeago}}</span>               \n              </small>             \n                <strong class=\"primary-font float-right\">{{message.senderKnownAs}}</strong>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n        </div>\n      </li> \n    </ul>\n    <div class=\"card-footer\">\n      <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n        <div class=\"input-group\">\n          <span class=\"input-group-append\">\n            <button class=\"btn btn-light\" [disabled]=\"!messageForm.valid\"> Message </button>\n          </span>\n            <!-- <input class=\"form-control\" cols=\"40\" line=\"10\" name=\"content\" [(ngModel)]=newMessage.content> -->\n            <textarea class=\"form-control\" cols=\"40\" line=\"10\" name=\"content\" [(ngModel)]=newMessage.content></textarea>\n        </div>\n      </form>\n    </div> \n  </div>\n</div>\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from 'src/app/_models/photo';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n\n\n\n// child de member-edit.component\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemeberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userServices: UserService, \n              private alertifyService: AlertifyService) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n  \n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n  // fonction pour initialiser le composant\n\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url : this.baseUrl + 'users/' +  this.authService.decodedToken.nameid + '/photos',\n      authToken : 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n   // parametrage du credential dans la methode onAfterAddingFile\n   // la photo telechargée en local n'utilisera pas les cookies\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n                // rafraichissement de la galerie\n    // après chargement dans le cloud et envoi du PublicId à la base par le cloud\n    // on charge les données depuis\n    // onSuccessItem renvoyé par FileUploader quand la photo est correctement uploadée\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response){\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          dateAdded: res.dateAdded,\n          url: res.url,\n          description: res.description,\n          isMain: res.isMain\n        };\n        // ajout de la photo a l'array\n        this.photos.push(photo);\n        // si le user vient d'être créé, la photo est ajoutée au tableau mais\n        // le rafraichissement ne se fait que lors du chargement depuis le serveur et la BDD\n        // donc si la photo est main on fait un refersh  pour afficher immédiatement la photo\n        if (photo.isMain){\n          // même chose que dans setMainPhoto\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        } \n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo){\n      this.userServices.setMainPhoto(this.authService.decodedToken.nameid , photo.id).subscribe(() => {\n      // on change le main dans la partie angular\n      // le but est d'afficher l'image sans interroger le serveur\n      // reste à rafraichir le parent--> member-edit.component\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      // pour le changement de photo et le rafraichissement\n      // changé et this.getMemeberPhotoChange.emit(photo.url) n'est plus utilisé remplacé avec le auth\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n      //**************************** */\n      // this.getMemeberPhotoChange.emit(photo.url); changé avec le behaviorSubject\n    }, error => { this.alertifyService.error('erreur lors de la tentative de changement de main photo')})\n  }\n\n  deletePhoto(id: number){\n    this.alertifyService.confirm('sur de vouloir supprimer la photo', () => {\n                                         //.authService.decodedToken.nameid  \n      this.userServices.deletePhoto(this.authService.currentUser.id, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex( p => p.id === id), 1);\n        this.alertifyService.success('photo supprimée avec succès');  \n      }, error => {this.alertifyService.error('erreur de suppression '+ error)});\n    })\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" class=\"img-thumbnail\" alt=\"\">\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm mr-1\" \n                (click)=\"setMainPhoto(photo)\"\n                [disabled]=\"photo.isMain\"\n                [ngClass]=\"photo.isMain?'btn-success active':'btn-secondary'\">Main\n      </button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\" \n        (click)=\"deletePhoto(photo.id)\"\n        [disabled]=\"photo.isMain\"><i class=\"fa fa-trash-o\"></i>\n    </button>\n    </div>\n  </div>\n</div>\n\n\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-4\">\n\n      <h4 class=\"liste\">Photo choisie</h4>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i> \n           Déposer les images ici\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Simple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  \n  <div class=\"col-md-8\"  style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h4 class=\"liste\">liste fichiers</h4>\n      <p>taille queue: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Nom</th>\n              <th>Taille</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n              <!-- <td *ngIf=\"uploader.options.isHTML5\">\n                  <div class=\"progress\" style=\"margin-bottom: 0;\">\n                      <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                  </div>\n              </td>\n              <td class=\"text-center\">\n                  <span *ngIf=\"item.isSuccess\"><i class=\"glyphicon glyphicon-ok\"></i></span>\n                  <span *ngIf=\"item.isCancel\"><i class=\"glyphicon glyphicon-ban-circle\"></i></span>\n                  <span *ngIf=\"item.isError\"><i class=\"glyphicon glyphicon-remove\"></i></span>\n              </td>\n              <td nowrap>\n                  <button type=\"button\" class=\"btn btn-success btn-xs\"\n                          (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n                      <span class=\"glyphicon glyphicon-upload\"></span> Upload\n                  </button>\n                  <button type=\"button\" class=\"btn btn-warning btn-xs\"\n                          (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\n                      <span class=\"glyphicon glyphicon-ban-circle\"></span> Cancel\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger btn-xs\"\n                          (click)=\"item.remove()\">\n                      <span class=\"glyphicon glyphicon-trash\"></span> Remove\n                  </button>\n              </td> -->\n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Avancement:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Tout Uploader\n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Tout arrêter\n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Tout supprimer\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  contener = 'Unread';\n\n  constructor(private userService: UserService, private alerify: AlertifyService, \n              private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data =>{\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    })\n  }\n\n  loadMessages(){\n    this.userService\n    .getMessages(this.authService.decodedToken.nameid, \n      this.pagination.currentPage,\n      this.pagination.itemsPerPage,\n      this.contener)\n    .subscribe(\n      (res: PaginatedResult<Message[]>) =>{\n        this.messages = res.result;\n        this.pagination = res.pagination;\n      },error =>{\n        this.alerify.error(error);\n      }\n    );\n  }\n\n  deleteMessage(id: number){\n    // equivalant de     (click)=\"$event.stopPropagation()\" dans html\n    event.stopImmediatePropagation();\n    //alertify --> message, fonction de callback\n    this.alerify.confirm('voulez vous vraiment supprimer ce message ?',() =>{\n    this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(()=>{\n      this.messages.splice(this.messages.findIndex(m => m.id === id),1);\n      this.alerify.success('message supprimé');},error => {this.alerify.error(error); });\n    });\n  }\n\n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"contener\" btnRadio=\"Unread\"(click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope\"></i>non lus\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"contener\" btnRadio=\"Inbox\"(click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope-open\"></i>reception\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"contener\" btnRadio=\"Outbox\"(click)=\"loadMessages()\">\n        <i class=\"fa fa-paper-plane\"></i>Envoi\n      </button>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>Pas de message</h3>\n  </div>\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor:pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">De / A</th>\n        <th style=\"width: 20%\">Evvoi / reception</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr *ngFor=\"let message of messages\"[routerLink]=\"['/members',\n        contener=='Outbox'? message.receptId:message.senderId]\" [queryParams]=\"{tab : 3}\">\n        <td>{{message.content}}</td>\n        <td>\n          <div *ngIf=\"contener != 'Outbox'\">\n            <img src=\"{{message?.senderPhotoUrl}}\" alt=\"\" class=\"img-circle rounded-circle\">\n            <strong> {{message.senderKnownAs}}</strong>\n          </div>\n          <div *ngIf=\"contener === 'Outbox'\">\n            <img src=\"{{message?.receptPhotoUrl}}\" alt=\"\" class=\"img-circle rounded-circle\">\n            <strong>{{message.receptKnownAs}}</strong>\n          </div>\n        </td>\n        <td>{{message.messageSent | timeago }}</td>\n        <td>\n          <!-- (click)=\"$event.stopPropagation()\" dans button -->\n          <button class=\"bnt btn-danger\"  (click)=\"deleteMessage(message.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n  </div>\n\n</div>\n\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" \n              [totalItems]=\"pagination.totalItems\"\n              [itemsPerPage]=\"pagination.itemsPerPage\"\n              [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n</pagination>\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { HomeComponent } from '../home/home.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  private home: HomeComponent; \r\n  constructor(\r\n    public authService: AuthService,\r\n    private alertify: AlertifyService,\r\n    private router: Router    \r\n    ) { }\r\n  // pour récupérer les valeurs depuis navcomponent.html\r\n  model: any = {};\r\n  photoUrl: string;\r\n  loged: string;\r\n\r\n    // charger la photo user.png avec observable\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n  \r\n  login(){\r\n    // il faut souscrire au service avec le this.model\r\n      // subscribe(observer=>)  \r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success('loggin OK !!!'); } , error => {\r\n        this.alertify.error(error);\r\n        // pour exemple on peut faire plus simple en appelant navigate dans le next\r\n      }, () => this.router.navigate(['/members']));\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logOut(){\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    console.log('logged out');\r\n    this.router.navigate(['/home']); \r\n  }\r\n  setLogin(){\r\n    this.authService.setLogin(this.model);\r\n    // NavComponent.updateUserStatus.subscribe(res =>{\r\n    //   this.authService.setLogin(this.model);\r\n    // })\r\n    // tslint:disable-next-line: no-debugger\r\n    debugger;\r\n  //  this.authService.logOk.next(true);\r\n    this.home.ngOnInit();\r\n    console.log(this.model);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Application de rencontre</a>\n\n    <!-- supprimé pour ne pas utiliser JQuery -->\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button> -->\n  <!-- ********************* -->\n  \n    <!-- <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\"> -->\n      <ul class=\"navbar-nav mr-auto\">\n        <!-- class=\"nav-item\" routerLinkActive=\"active\" pour surligner au survol des liens -->\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <!-- on tape a-router et le routerLink est auto implémenté -->\n          <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\"[routerLink]=\"['/lists']\">Listes</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a  *ngIf=\"loggedIn()\" class=\"nav-link\" (click)=\"logOut()\">Logout</a>\n        </li> -->\n        <!-- <div *ngif=\"loggedIn()\" class=\"dropdown\">\n          <a class=\"nav-link dropdown-toggle text-light\">\n            welcome{{authService.decodeToken?.unique_name}}\n          </a>  \n          <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-divider\"></a>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </div> -->\n      </ul>\n  \n      <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n        <span>\n          <img src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"\">\n        </span>\n        <a class=\"dropdown-toggle text-light\" dropdownToggle>\n          Bienvenue {{authService.decodedToken?.unique_name | titlecase}}\n        </a>\n      \n        <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n          <a class=\"dropdown-item\" [routerLink]=\"['/members/edit']\">\n            <i class=\"fa fa-user\"></i> Editer le profil</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\"><i class=\"fa fa-sign-out\"(click)=\"logOut()\">logout</i></a>\n        </div>\n      </div>\n  \n      <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\"(ngSubmit)=\"login()\">\n        <input class=\"form-control mr-sm-2\" type=\"text\" name=\"userName\" \n        placeholder=\"UserName\" requiered [(ngModel)]=\"model.userName\" (change)=\"setLogin()\">\n  \n        <input class=\"form-control mr-sm-2\" type=\"password\" name=\"Password\" \n        placeholder=\"Password\" requiered [(ngModel)]=\"model.Password\">\n        <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n\n      </form>\n  </div>\n</nav>","import { Component, OnInit,Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../_models/User';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n // @Input() valuesFromHome;\n    // communication enfant -->parent\n  @Output() cancelRegister = new EventEmitter(); \n  user: User;\n  registerForm: FormGroup;\n    // déclaration de bsConfig en partial pour redre tous les paramètres optionne\n  bsConfig: Partial <BsDatepickerConfig>;\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n      // appliquer la couleur au datepicker\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    },\n    \n      // remplace la methode register initiale ET REMPLACE PAR \n      // FormBuilder \n    // this.registerForm = new FormGroup({\n    //   username: new FormControl('',Validators.required),\n    //   password: new FormControl('',[Validators.required,Validators.minLength(6),\n    //                 Validators.maxLength(12)]),\n    //   confirmpassword: new FormControl('', Validators.required) \n    // },this.passwordMatchValidator);\n    /*********Remplace toutes les entrées dessus :*****/\n    this.createForm();\n  }\n\n  createForm(){\n    this.registerForm = this.fb.group({\n      gender:['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required,Validators.minLength(6),\n        Validators.maxLength(12)]],\n      confirmpassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup){\n    return g.get('password').value === g.get('confirmpassword').value ? null : {'mismatch': true } \n  }\n\n  register(){\n    // this.authService.register(this.model).subscribe(() => {\n    //   this.alertify.success('register accompli');\n    // }, error => {this.alertify.error(error); });\n\n        //***   register avec formGroup */\n    if (this.registerForm.valid){\n        // assign: méthode js \n        // copie les données d'un objet dans un autre {}\n      this.user = Object.assign({}, this.registerForm.value);\n\n      // souscription à register de authService\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('register réussi');\n      }, error => \n      { this.alertify.error(error); },\n      // dernier paramètre de subscribe--> complete (complément)\n      // on y met le login et une redirection vers la page d'accueil\n      () => {\n          this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n          });\n        }\n      );\n    }\n  }\n\n  cancel(){\n    // envoi de l'event avec la valeur false pour valider le cancel\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">Je suis: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Un homme\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Une femme\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <!-- implémentation des controles de saise -->\n    <input type=\"text\" \n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors \n      && registerForm.get('username').touched}\"\n    class=\"form-control\" formControlName=\"username\"\n    placeholder=\"Nom\">\n    <div class=\"invalid-feedback\">Entrer un nom de user</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors \n      && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Pseudo\" formControlName=\"knownAs\">\n        <!-- ici ca marche aussi si juste\n        <div class=\"invalid-feedback\">Entrer un nom de user</div> -->\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched \n      && registerForm.get('knownAs').hasError('required')\">Renseignez le pseudo</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors \n      && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n      placeholder=\"Date de naissance\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]=\"bsConfig\">\n              <!-- ici ca marche aussi si juste\n        <div class=\"invalid-feedback\">Entrer un nom de user</div> -->\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched \n      && registerForm.get('dateOfBirth').hasError('required')\">Renseignez  la date de naissance</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors \n      && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"Ville\" formControlName=\"city\">\n              <!-- ici ca marche aussi si juste\n        <div class=\"invalid-feedback\">Entrer un nom de user</div> -->\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched \n      && registerForm.get('city').hasError('required')\">Renseignez la ville</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors \n      && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Pays\" formControlName=\"country\">\n              <!-- ici ca marche aussi si juste\n        <div class=\"invalid-feedback\">Entrer un nom de user</div> -->\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched \n      && registerForm.get('country').hasError('required')\">Renseignez le pays</div>\n  </div>\n\n  <div class=\"form-group\">\n    <!-- && registerForm.get('password').touched supprimé dans chk ngif -->\n    <input type=\"password\" \n    [ngClass]=\"{'is-invalid': registerForm.get('password').errors && \n    registerForm.get('password').touched}\"\n    class=\"form-control\" formControlName= \"password\"\n    placeholder=\"mot de passe\">\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('required')\">\n      Entrer un mot de passe\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('minlength')\">\n      Entrer un mot de passe de minimum 6 caractères\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('maxlength')\">\n      Entrer un mot de passe de maximum 12 caractères\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n      <!-- && registerForm.get('password').touched supprimé dans chk ngif -->\n    <input type=\"password\" \n    [ngClass]=\"{'is-invalid': registerForm.get('confirmpassword').errors\n    && registerForm.get('confirmpassword').touched\n    || registerForm.get('confirmpassword').touched\n    && registerForm.hasError('mismatch')}\"\n    class=\"form-control\" formControlName= \"confirmpassword\"\n    placeholder=\"confirmer mot de passe\">\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('confirmpassword').hasError('required')\">\n      Entrer un mot de passe\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.hasError('mismatch')\">\n      Entrer un mot de passe identique\n    </div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" type=\"submit\">Valider </button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n  \n</form>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { User } from '../_models/User';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  @Output() cancelReset = new EventEmitter(); \n  user: User;\n  resetForm: FormGroup;\n  bsConfig: Partial <BsDatepickerConfig>;\n  login: string;\n\n  constructor(public authService: AuthService,\n              private alertify: AlertifyService,\n              private fb: FormBuilder,\n              private router: Router\n  ){ }\n\n  ngOnInit() {\n    this.bsConfig = {\n    containerClass: 'theme-red'\n    },\n    this.createForm();\n    this.login = this.authService.getLogin();\n  }\n  createForm() {\n    this.resetForm = this.fb.group({\n      password: ['', [Validators.required,Validators.minLength(6),\n        Validators.maxLength(12)]],\n      confirmpassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator}); \n  }\n\n  passwordMatchValidator(g: FormGroup){\n    return g.get('password') === g.get('confirmpassword');\n  }\n\n  resetPassword(){\n    // assigner les valeur dans resetForm à user\n    this.user = Object.assign({},this.resetForm.value);\n    this.user.userName = this.login;\n    \n    // tslint:disable-next-line: no-debugger\n    //debugger;\n    this.authService.reset(this.user).subscribe(() => {\n      this.alertify.success('reset réussi');\n      // tslint:disable-next-line: no-debugger\n      //debugger;\n    }, error => \n    { this.alertify.error(error); },\n    () => this.cancelReset.emit(false));// pour fermer la fenêtre\n    // tslint:disable-next-line: no-debugger\n    console.log(this.resetForm.value);\n  }\n\n  cancel(){\n    // envoi de l'event avec la valeur false pour valider le cancel\n    this.cancelReset.emit(false);\n    console.log('cancelled');\n  }\n\n}\n","<form [formGroup]=\"resetForm\"(ngSubmit)=\"resetPassword()\">\n  <!-- <div class=\"form-group\">\n    <!-- && resetForm.get('password').touched supprimé dans chk ngif -->\n    <div class=\"form-group\">\n      <div >\n        <strong class=\"row justify-content-center title\">Reset mot de passe de {{login}}</strong>\n      </div>\n      <!-- && registerForm.get('password').touched supprimé dans chk ngif -->\n      <input type=\"password\" \n      [ngClass]=\"{'is-invalid': resetForm.get('password').errors && \n      resetForm.get('password').touched}\"\n      class=\"form-control\" formControlName= \"password\"\n      placeholder=\"mot de passe\">\n      <div class=\"invalid-feedback\"\n        *ngIf=\"resetForm.get('password').hasError('required')\">\n        Entrer un mot de passe\n      </div>\n      <div class=\"invalid-feedback\"\n        *ngIf=\"resetForm.get('password').hasError('minlength')\">\n        Entrer un mot de passe de minimum 6 caractères\n      </div>\n      <div class=\"invalid-feedback\"\n        *ngIf=\"resetForm.get('password').hasError('maxlength')\">\n        Entrer un mot de passe de maximum 12 caractères\n      </div>\n    </div>\n\n  <div class=\"form-group\"> \n    <input type=\"password\" \n    [ngClass]=\"{'is-invalid': resetForm.get('confirmpassword').errors\n    && resetForm.get('confirmpassword').touched\n    || resetForm.get('confirmpassword').touched\n    && resetForm.hasError('mismatch')}\"\n    class=\"form-control\" formControlName= \"confirmpassword\"\n    placeholder=\"confirmer mot de passe\">\n\n    <div class=\"invalid-feedback\"\n      *ngIf=\"resetForm.get('confirmpassword').hasError('required')\">\n      Entrer un mot de passe\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"resetForm.hasError('mismatch')\">\n      Entrer un mot de passe identique\n    </div>\n  </div> \n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!resetForm.valid\" type=\"submit\">Valider </button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n\n</form>","import {Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {MemberListComponent} from './members/member-list/member-list.component';\r\nimport {MessagesComponent} from './messages/message.component';\r\nimport {ListsComponent} from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolver/member-detail-resolver';\r\nimport { MemberListResolver } from './_resolver/member-list-resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolver/member-edit-resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes';\r\nimport { ListResolver } from './_resolver/list-resolver';\r\nimport { MessagesResolver } from './_resolver/messages-resolver';\r\n\r\n\r\n// tableau de routes\r\nexport const appRoutes: Routes = [\r\n    {path : '', component: HomeComponent},\r\n    {   path : '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children:[\r\n            {path : 'members', component: MemberListComponent, \r\n                resolve: {users: MemberListResolver}},\r\n            {path : 'messages', component: MessagesComponent,\r\n                resolve: {messages: MessagesResolver}},\r\n            {path : 'members/edit', component: MemberEditComponent,\r\n                    resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n            {path : 'lists', component: ListsComponent,\r\n                resolve : {users : ListResolver}},\r\n            // appel du resolver dans la route pour récuperer les datas du user\r\n            {path : 'members/:id', component : MemberDetailComponent, resolve: {user: MemberDetailResolver}}\r\n        ]\r\n    },       // canActivate [tableau de guards]\r\n\r\n    // pathMatch: 'full' pour correspondance totale\r\n   {path : '**', redirectTo: 'home', pathMatch: 'full'}\r\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}